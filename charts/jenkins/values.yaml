image: jenkins/jenkins
imageTag: latest # Needs to be an image with https://github.com/jenkinsci/configuration-as-code-plugin
imagePullPolicy: Always
javaOpts: ""
privilegedContainer: false

loggingProperties: |
  handlers=java.util.logging.ConsoleHandler
  java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
  jenkins.level=WARNING
  java.util.logging.ConsoleHandler.level=WARNING


masterTolerations: []
masterNodeSelector: {}
podAnnotations: {}
resources: []

ingress:
  enabled: false
  # # Annotations to be added to the ingress
  # #
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: "true"
  #
  # # Hostnames
  # # Must be provided if Ingress is enabled
  # #
  # hosts:
  #   - jenkins.domain.com
  #
  # # TLS configuration
  # # Secrets must be manually created in the namespace
  # #
  # tls:
  #   - secretName: jenkins-domain-tls
  #     hosts:
  #       - jenkins.domain.com

persistence:
  jenkinsHome:
    size: 20Gi
    annotations: {}

headerColor: red # grey | blue
headerMessage: "" # E.g. "Jenkins for MyCorp"

userData:
  create: false
  # configMap:
  #   custom-js.js: |
  #     console.log("Hello from Jenkins")
  #   custom-stylesheet.css: |
  #     body {
  #       background-color: #fff;
  #     }

# Only valid for integration with GitHub
# Converted to a jobDSL script by the chart then used by jcasc plugin
# jobGenerator:
# - jobNameSuffixes: [""]
#   isTrunkBranch: false
#   headRegexFilter: "$feature/.*"
#   githubRepo:
#     serverUrl: ""
#     repoOwner: ""
#     repository: ""
#     credentialsId: ""

# Used by "configuration-as-code" plugin
configuration:
  jenkins:
    systemMessage: "Configured via configuration-as-code plugin!"

# This secret will be used by configuration-as-code plugin for interpolating
# ${} values inside "configuration" above
secrets:
  name: jenkins-secrets
